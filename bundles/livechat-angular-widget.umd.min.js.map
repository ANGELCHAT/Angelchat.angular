{"version":3,"sources":["ng://@livechat/angular-widget/lib/livechat-widget.component.ts","ng://@livechat/angular-widget/lib/livechat-widget.module.ts"],"names":["LivechatWidgetComponent","Subject","prototype","ngOnInit","_this","this","window","license","licenseId","group","chat_between_groups","chatBetweenGroups","params","visitor","ga_version","gaVersion","lc","document","createElement","type","async","src","s","getElementsByTagName","parentNode","insertBefore","addEventListener","_chatLoaded","error","console","LC_API","_setCallbacks","_setMethods","onChatLoaded","next","on_after_load","onAfterLoad","on_before_load","onBeforeLoad","on_chat_ended","onChatEnded","on_chat_started","data","onChatStarted","on_chat_state_changed","onChatStateChanged","on_chat_window_hidden","onChatWindowHidden","on_chat_window_minimized","onChatWindowMinimized","on_chat_window_opened","onChatWindowOpened","on_message","onMessage","on_postchat_survey_submitted","onPostchatSurveySubmitted","on_prechat_survey_submitted","onPrechatSurveySubmitted","on_rating_comment_submitted","onRatingCommentSubmitted","on_rating_submitted","onRatingSubmitted","on_ticket_created","onTicketCreated","agentsAreAvailable","agents_are_available","chatRunning","chat_running","chatWindowHidden","chat_window_hidden","chatWindowMaximized","chat_window_maximized","chatWindowMinimized","chat_window_minimized","closeChat","close_chat","getChatId","get_chat_id","getChatsNumber","get_chats_number","getLastVisitTimestamp","get_last_visit_timestamp","getPageViewsNumber","get_page_views_number","getVisitorId","get_visitor_id","getVisitsNumber","get_visits_number","hideChatWindow","hide_chat_window","minimizeChatWindow","minimize_chat_window","openChatWindow","open_chat_window","setCustomVariables","t","set_custom_variables","setVisitorEmail","set_visitor_email","setVisitorName","set_visitor_name","triggerSalesTracker","e","trigger_sales_tracker","updateCustomVariables","update_custom_variables","visitorEngaged","visitor_engaged","visitorQueued","visitor_queued","Component","args","selector","template","Input","Output","LivechatWidgetModule","NgModule","imports","declarations","exports"],"mappings":"yVAAA,IAAAA,EAAA,WAwDE,SAAAA,sBAxCgC,IAAIC,EAAAA,yBACL,IAAIA,EAAAA,0BACH,IAAIA,EAAAA,yBACL,IAAIA,EAAAA,2BACF,IAAIA,EAAAA,gCACC,IAAIA,EAAAA,gCACJ,IAAIA,EAAAA,mCACD,IAAIA,EAAAA,gCACP,IAAIA,EAAAA,uBACb,IAAIA,EAAAA,uCACY,IAAIA,EAAAA,sCACL,IAAIA,EAAAA,sCACJ,IAAIA,EAAAA,+BACX,IAAIA,EAAAA,6BACN,IAAIA,EAAAA,4BACL,IAAIA,EAAAA,eA2BtCD,EAAAE,UAAAC,SAAA,WAAA,IAAAC,EAAAC,KACE,IAAKC,OAAe,OAAG,CACrBA,OAAa,KAAIA,OAAa,MAAK,GACnCA,OAAa,KAAEC,QAAUF,KAAKG,UAC9BF,OAAa,KAAEG,MAAQJ,KAAKI,MAC5BH,OAAa,KAAEI,oBAAsBL,KAAKM,kBAC1CL,OAAa,KAAEM,OAASP,KAAKO,OAC7BN,OAAa,KAAEO,QAAUR,KAAKQ,QAC9BP,OAAa,KAAEQ,WAAaT,KAAKU,UACjC,IAAMC,EAAKC,SAASC,cAAc,UAClCF,EAAGG,KAAO,kBACVH,EAAGI,OAAQ,EACXJ,EAAGK,IAAM,0CACT,IAAMC,EAAIL,SAASM,qBAAqB,UAAU,GAClDD,EAAEE,WAAWC,aAAaT,EAAIM,GAC9BN,EAAGU,iBAAiB,OAAQ,WAC1BtB,EAAKuB,YAAYrB,OAAe,UAElCU,EAAGU,iBAAiB,QAAS,SAACE,GAC5BC,QAAQD,MAAMA,OAKZ5B,EAAAE,UAAAyB,qBAAYG,GAClBzB,KAAK0B,cAAcD,GACnBzB,KAAK2B,YAAYF,GACjBzB,KAAK4B,aAAaC,KAAKJ,IAGjB9B,EAAAE,UAAA6B,uBAAcD,cACpBA,EAAOK,cAAgB,WAAM,OAAA/B,EAAKgC,YAAYF,QAC9CJ,EAAOO,eAAiB,WAAM,OAAAjC,EAAKkC,aAAaJ,QAChDJ,EAAOS,cAAgB,WAAM,OAAAnC,EAAKoC,YAAYN,QAC9CJ,EAAOW,gBAAkB,SAACC,GAAS,OAAAtC,EAAKuC,cAAcT,KAAKQ,IAC3DZ,EAAOc,sBAAwB,SAACF,GAAS,OAAAtC,EAAKyC,mBAAmBX,KAAKQ,IACtEZ,EAAOgB,sBAAwB,WAAM,OAAA1C,EAAK2C,mBAAmBb,QAC7DJ,EAAOkB,yBAA2B,WAAM,OAAA5C,EAAK6C,sBAAsBf,QACnEJ,EAAOoB,sBAAwB,WAAM,OAAA9C,EAAK+C,mBAAmBjB,QAC7DJ,EAAOsB,WAAa,SAACV,GAAS,OAAAtC,EAAKiD,UAAUnB,KAAKQ,IAClDZ,EAAOwB,6BAA+B,SAACZ,GAAS,OAAAtC,EAAKmD,0BAA0BrB,KAAKQ,IACpFZ,EAAO0B,4BAA8B,SAACd,GAAS,OAAAtC,EAAKqD,yBAAyBvB,KAAKQ,IAClFZ,EAAO4B,4BAA8B,SAAChB,GAAS,OAAAtC,EAAKuD,yBAAyBzB,KAAKQ,IAClFZ,EAAO8B,oBAAsB,SAAClB,GAAS,OAAAtC,EAAKyD,kBAAkB3B,KAAKQ,IACnEZ,EAAOgC,kBAAoB,SAACpB,GAAS,OAAAtC,EAAK2D,gBAAgB7B,KAAKQ,KAGzD1C,EAAAE,UAAA8B,qBAAYF,GAClBzB,KAAK2D,mBAAqB,WAAM,OAAAlC,EAAOmC,wBACvC5D,KAAK6D,YAAc,WAAM,OAAApC,EAAOqC,gBAChC9D,KAAK+D,iBAAmB,WAAM,OAAAtC,EAAOuC,sBACrChE,KAAKiE,oBAAsB,WAAM,OAAAxC,EAAOyC,yBACxClE,KAAKmE,oBAAsB,WAAM,OAAA1C,EAAO2C,yBACxCpE,KAAKqE,UAAY,WAAM,OAAA5C,EAAO6C,cAC9BtE,KAAKuE,UAAY,WAAM,OAAA9C,EAAO+C,eAC9BxE,KAAKyE,eAAiB,WAAM,OAAAhD,EAAOiD,oBACnC1E,KAAK2E,sBAAwB,WAAM,OAAAlD,EAAOmD,4BAC1C5E,KAAK6E,mBAAqB,WAAM,OAAApD,EAAOqD,yBACvC9E,KAAK+E,aAAe,WAAM,OAAAtD,EAAOuD,kBACjChF,KAAKiF,gBAAkB,WAAM,OAAAxD,EAAOyD,qBACpClF,KAAKmF,eAAiB,WAAM,OAAA1D,EAAO2D,oBACnCpF,KAAKqF,mBAAqB,WAAM,OAAA5D,EAAO6D,wBACvCtF,KAAKuF,eAAiB,WAAM,OAAA9D,EAAO+D,oBACnCxF,KAAKyF,mBAAqB,SAACC,GAAM,OAAAjE,EAAOkE,qBAAqBD,IAC7D1F,KAAK4F,gBAAkB,SAACF,GAAM,OAAAjE,EAAOoE,kBAAkBH,IACvD1F,KAAK8F,eAAiB,SAACJ,GAAM,OAAAjE,EAAOsE,iBAAiBL,IACrD1F,KAAKgG,oBAAsB,SAACC,EAAGP,GAAM,OAAAjE,EAAOyE,sBAAsBD,EAAGP,IACrE1F,KAAKmG,sBAAwB,SAACT,GAAM,OAAAjE,EAAO2E,wBAAwBV,IACnE1F,KAAKqG,eAAiB,WAAM,OAAA5E,EAAO6E,mBACnCtG,KAAKuG,cAAgB,WAAM,OAAA9E,EAAO+E,uCA3HrCC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,kBACVC,SAAU,gFAITC,EAAAA,qBACAA,EAAAA,iCACAA,EAAAA,sBACAA,EAAAA,uBACAA,EAAAA,yBACAA,EAAAA,4BACAC,EAAAA,4BACAA,EAAAA,6BACAA,EAAAA,4BACAA,EAAAA,8BACAA,EAAAA,mCACAA,EAAAA,mCACAA,EAAAA,sCACAA,EAAAA,mCACAA,EAAAA,0BACAA,EAAAA,0CACAA,EAAAA,yCACAA,EAAAA,yCACAA,EAAAA,kCACAA,EAAAA,gCACAA,EAAAA,+BACAA,EAAAA,YA/BH,GCAAC,EAAA,oDAGCC,EAAAA,SAAQN,KAAA,CAAC,CACRO,QAAS,GACTC,aAAc,CAACvH,GACfwH,QAAS,CAACxH,SANZ","sourcesContent":["import { Component, OnInit, Input, Output } from '@angular/core';\nimport { LiveChatWidgetApiModel } from './livechat-widget.models';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'livechat-widget',\n  template: ``,\n  styles: []\n})\nexport class LivechatWidgetComponent implements OnInit {\n  @Input() licenseId: number;\n  @Input() group: number;\n  @Input() chatBetweenGroups: boolean;\n  @Input() params: { name: string, value: any };\n  @Input() visitor: { name: string, email: string, };\n  @Input() gaVersion: string;\n  @Output() public onChatLoaded = new Subject<LiveChatWidgetApiModel>();\n  @Output() public onAfterLoad = new Subject();\n  @Output() public onBeforeLoad = new Subject();\n  @Output() public onChatEnded = new Subject();\n  @Output() public onChatStarted = new Subject<any>();\n  @Output() public onChatStateChanged = new Subject<any>();\n  @Output() public onChatWindowHidden = new Subject();\n  @Output() public onChatWindowMinimized = new Subject();\n  @Output() public onChatWindowOpened = new Subject(); data\n  @Output() public onMessage = new Subject<any>();\n  @Output() public onPostchatSurveySubmitted = new Subject<any>();\n  @Output() public onPrechatSurveySubmitted = new Subject<any>();\n  @Output() public onRatingCommentSubmitted = new Subject<any>();\n  @Output() public onRatingSubmitted = new Subject<any>();\n  @Output() public onTicketCreated = new Subject<any>();\n  @Output() public onWidgetResize = new Subject();\n\n  public agentsAreAvailable: Function;\n  public chatRunning: Function;\n  public chatWindowHidden: Function;\n  public chatWindowMaximized: Function;\n  public chatWindowMinimized: Function;\n  public closeChat: Function;\n  public getChatId: Function;\n  public getChatsNumber: Function;\n  public getLastVisitTimestamp: Function;\n  public getPageViewsNumber: Function;\n  public getVisitorId: Function;\n  public getVisitsNumber: Function;\n  public hideChatWindow: Function;\n  public minimizeChatWindow: Function;\n  public openChatWindow: Function;\n  public setCustomVariables: Function;\n  public setVisitorEmail: Function;\n  public setVisitorName: Function;\n  public triggerSalesTracker: Function;\n  public updateCustomVariables: Function;\n  public visitorEngaged: Function;\n  public visitorQueued: Function;\n\n  constructor() { }\n\n  ngOnInit() {\n    if (!window['LC_API']) {\n      window['__lc'] = window['__lc'] || {};\n      window['__lc'].license = this.licenseId;\n      window['__lc'].group = this.group;\n      window['__lc'].chat_between_groups = this.chatBetweenGroups;\n      window['__lc'].params = this.params;\n      window['__lc'].visitor = this.visitor;\n      window['__lc'].ga_version = this.gaVersion;\n      const lc = document.createElement('script');\n      lc.type = 'text/javascript';\n      lc.async = true;\n      lc.src = 'https://cdn.livechatinc.com/tracking.js';\n      const s = document.getElementsByTagName('script')[0];\n      s.parentNode.insertBefore(lc, s);\n      lc.addEventListener('load', () => {\n        this._chatLoaded(window['LC_API']);\n      });\n      lc.addEventListener('error', (error) => {\n        console.error(error);\n      });\n    }\n  }\n\n  private _chatLoaded(LC_API: LiveChatWidgetApiModel) {\n    this._setCallbacks(LC_API);\n    this._setMethods(LC_API);\n    this.onChatLoaded.next(LC_API);\n  }\n\n  private _setCallbacks(LC_API: LiveChatWidgetApiModel) {\n    LC_API.on_after_load = () => this.onAfterLoad.next();\n    LC_API.on_before_load = () => this.onBeforeLoad.next();\n    LC_API.on_chat_ended = () => this.onChatEnded.next();\n    LC_API.on_chat_started = (data) => this.onChatStarted.next(data);\n    LC_API.on_chat_state_changed = (data) => this.onChatStateChanged.next(data);\n    LC_API.on_chat_window_hidden = () => this.onChatWindowHidden.next();\n    LC_API.on_chat_window_minimized = () => this.onChatWindowMinimized.next();\n    LC_API.on_chat_window_opened = () => this.onChatWindowOpened.next();\n    LC_API.on_message = (data) => this.onMessage.next(data);\n    LC_API.on_postchat_survey_submitted = (data) => this.onPostchatSurveySubmitted.next(data);\n    LC_API.on_prechat_survey_submitted = (data) => this.onPrechatSurveySubmitted.next(data);\n    LC_API.on_rating_comment_submitted = (data) => this.onRatingCommentSubmitted.next(data);\n    LC_API.on_rating_submitted = (data) => this.onRatingSubmitted.next(data);\n    LC_API.on_ticket_created = (data) => this.onTicketCreated.next(data);\n  }\n\n  private _setMethods(LC_API: LiveChatWidgetApiModel) {\n    this.agentsAreAvailable = () => LC_API.agents_are_available();\n    this.chatRunning = () => LC_API.chat_running();\n    this.chatWindowHidden = () => LC_API.chat_window_hidden();\n    this.chatWindowMaximized = () => LC_API.chat_window_maximized();\n    this.chatWindowMinimized = () => LC_API.chat_window_minimized();\n    this.closeChat = () => LC_API.close_chat();\n    this.getChatId = () => LC_API.get_chat_id();\n    this.getChatsNumber = () => LC_API.get_chats_number();\n    this.getLastVisitTimestamp = () => LC_API.get_last_visit_timestamp();\n    this.getPageViewsNumber = () => LC_API.get_page_views_number();\n    this.getVisitorId = () => LC_API.get_visitor_id();\n    this.getVisitsNumber = () => LC_API.get_visits_number();\n    this.hideChatWindow = () => LC_API.hide_chat_window();\n    this.minimizeChatWindow = () => LC_API.minimize_chat_window();\n    this.openChatWindow = () => LC_API.open_chat_window();\n    this.setCustomVariables = (t) => LC_API.set_custom_variables(t);\n    this.setVisitorEmail = (t) => LC_API.set_visitor_email(t);\n    this.setVisitorName = (t) => LC_API.set_visitor_name(t);\n    this.triggerSalesTracker = (e, t) => LC_API.trigger_sales_tracker(e, t);\n    this.updateCustomVariables = (t) => LC_API.update_custom_variables(t);\n    this.visitorEngaged = () => LC_API.visitor_engaged();\n    this.visitorQueued = () => LC_API.visitor_queued();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { LivechatWidgetComponent } from './livechat-widget.component';\n\n@NgModule({\n  imports: [],\n  declarations: [LivechatWidgetComponent],\n  exports: [LivechatWidgetComponent]\n})\nexport class LivechatWidgetModule { }\n"]}